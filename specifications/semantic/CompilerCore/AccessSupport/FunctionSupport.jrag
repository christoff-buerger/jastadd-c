/*
	This program and the accompanying materials are made available under the
	terms of the MIT license (X11 license) which accompanies this distribution.
	
	Author: Christoff BÃ¼rger
*/

aspect FunctionSupport {
	/**
	 * Support for function declarations:
	 */
	eq Declaration.IsFunctionDeclaration() = getType() instanceof FunctionType;
	eq Declaration.IsFunctionDefinition() =
		hasInitializer() ?
				getInitializer() instanceof FunctionDefinitionInitializer :
				false;
	eq Declaration.IsFunctionPrototyp() = IsFunctionDeclaration() ?
			!hasInitializer() :
			false;
	
	/**
	 * Support for informations about a function types parameters:
	 */
	eq FunctionType.IsParameterlessFunction() =
		getNumParameter() == 1 && !getParameter(0).hasBindedName() &&
		(getParameter(0).getType().RetrieveFinalNode() instanceof PrimitiveType) &&
		((PrimitiveType)getParameter(0).getType().RetrieveFinalNode()).getType() == jastaddc.semantics.PrimitiveTypes._void;
	eq FunctionType.IsWithoutParameterSpecification() =
		getNumParameter() == 0;
	
	/**
	 * Support for function return statements:
	 */
	ReturnJump contributes this
		when (!(ReferencedFunctionDefinition().IsErrorNode()))
		to FunctionDefinitionInitializer.AssociatedReturnJumps()
		for ReferencedFunctionDefinition();
}
