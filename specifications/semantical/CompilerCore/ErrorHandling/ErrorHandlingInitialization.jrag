/**
 * This aspect initializes each error node and constructs the
 * DefaultErrorBuilder's error AST, thus it initializes the
 * error handling module.
 * 
 * @author C. Bürger
 */
aspect ErrorHandlingInitialization {
	// Because of collection attribute contributions contained in the error tree
	// represented by the DefaultErrorBuilder's TranslationUnit the
	// translation unit cannot be constructed as a non terminal attribute
	// (the error nodes would not contribute themself as required). Solution:
	// construct the error tree using a rewrite:
	rewrite DefaultErrorBuilder {
		when (!hasTranslationUnit())
		to DefaultErrorBuilder {
			setTranslationUnit(ConstructErrorTree());
			return this;
		}
	}
	
	// Construct the (smallest possible) final AST tree containing
	// all error node types needed. The tree can represent an invalid C
	// programm and even break syntactic constraints/parser constraints:
	syn lazy TranslationUnit DefaultErrorBuilder.ConstructErrorTree() =
		new TranslationUnit(
				new List().add(new DeclarationCollection(new List().add(new Declaration(
						new List(),
						new List(),
						new PrimitiveType(new List(), jastaddc.semantics.PrimitiveTypes._error_type),
						new Opt(),
						new Opt(new FunctionDefinitionInitializer(new CompoundStatement(new List().add(
								new ExplicitLabeledStatement (
										new SwitchStatement(new Variable(new Identifier("§ERROR TREE VARIABLE§")), new EmptyStatement()),
										new Identifier("§ERROR TREE LABEL§"))).add(
								new Declaration(
										new List(),
										new List(),
										new Structure(new List(), new Opt(), new List().add(new NormalUnionOrStructureElement(new PrimitiveType(new List(), jastaddc.semantics.PrimitiveTypes._error_type), new Identifier("§ERROR TREE STRUCTURE MEMBER§")))),
										new Opt(),
										new Opt())).add(
								new Declaration(
										new List(),
										new List(),
										new Union(new List(), new Opt(), new List()),
										new Opt(),
										new Opt())).add(
								new Declaration(
										new List(),
										new List(),
										new Enumeration(new List(), new Opt(), new List()),
										new Opt(),
										new Opt())).add(
								new Declaration(
										new List(),
										new List(),
										new Array(new List(), new PrimitiveType(new List(), jastaddc.semantics.PrimitiveTypes._error_type), new Opt()),
										new Opt(),
										new Opt()))))))))));
}
