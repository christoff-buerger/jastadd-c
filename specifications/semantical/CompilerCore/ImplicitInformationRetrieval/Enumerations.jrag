/**
 * @author C. BÃ¼rger
 */
aspect Enumerations {
	/** Enumerations */
	
	// Enumeration members have type int [6.7.2.2;3] S.105.
	eq EnumerationElement.getType() = new PrimitiveType(
			new List(),
			jastaddc.semantics.PrimitiveTypes._signed_int);
	
	// if no value for an enumeration constant is given, it's value is 0, if
	// it is the first enumeration constant, otherwise it's value is the
	// value of the previous enumeration constant plus 1. [6.7.2.2;3] S.105.
	rewrite EnumerationElement {
		when (!hasValue())
		to EnumerationElement {
			EnumerationElement elem = PreviousElement();
			if (elem == null) {
				IntegerConstant value = new IntegerConstant(
						"0",
						"0",
						new NumeralSystemOctal(),
						new PrimitiveType(new List(), jastaddc.semantics.PrimitiveTypes._signed_int));
				setValue(value);
			} else {
				IntegerConstant value = new IntegerConstant(
						"1",
						"1",
						new NumeralSystemOctal(),
						new PrimitiveType(new List(), jastaddc.semantics.PrimitiveTypes._signed_int));
				Addition valueExpr = new Addition(
						new Variable(new Identifier(elem.Name())),
						value);
				setValue(valueExpr);
			}
			return this;
		}
	}
	
	/** Internal support methods */
	
	inh EnumerationElement EnumerationElement.PreviousElement();
	eq Enumeration.getEnumerationElement(int index).PreviousElement() =
		index > 0 ? getEnumerationElement(index - 1) : null;
}
